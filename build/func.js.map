{
  "version": 3,
  "sources": ["../src/func.ts"],
  "sourcesContent": ["import { type LoginResultResponse } from './api';\nimport { ACLoadCodes } from './apitypes';\n\nexport class MyFunc {\n    private readonly adapter: ioBroker.Adapter;\n    constructor(adapter: ioBroker.Adapter) {\n        this.adapter = adapter;\n    }\n\n    public rundeAufZehner(value: number, max: number = 800): number {\n        const val = Math.round(value / 10) * 10;\n        if (val > max) {\n            //max 800W Einspeisung\n            return max;\n        }\n        return val;\n    }\n\n    public whatIsIt(obj: any): 'boolean' | 'number' | 'string' | 'array' | 'object' | 'null' | 'undefined' | undefined {\n        if (obj === null) {\n            return 'null';\n        }\n        if (obj === undefined) {\n            return 'undefined';\n        }\n        if (Array.isArray(obj)) {\n            return 'array';\n        }\n        if (typeof obj === 'string') {\n            return 'string';\n        }\n        if (typeof obj === 'boolean') {\n            return 'boolean';\n        }\n        if (typeof obj === 'number') {\n            return 'number';\n        }\n        if (obj != null && typeof obj === 'object') {\n            return 'object';\n        }\n    }\n\n    public isLoginValid(loginData: LoginResultResponse | null, now: Date = new Date()): boolean {\n        if (loginData != null) {\n            return new Date(loginData.token_expires_at * 1000).getTime() > now.getTime();\n        }\n        return false;\n    }\n\n    public name2id(pName: string): string {\n        return (pName || '').replace(this.adapter.FORBIDDEN_CHARS, '_');\n    }\n\n    public isACLoading(value: string): boolean {\n        return Object.values(ACLoadCodes).includes(value as ACLoadCodes);\n    }\n}\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AACA,sBAA4B;AAErB,MAAM,OAAO;AAAA,EACC;AAAA,EACjB,YAAY,SAA2B;AACnC,SAAK,UAAU;AAAA,EACnB;AAAA,EAEO,eAAe,OAAe,MAAc,KAAa;AAC5D,UAAM,MAAM,KAAK,MAAM,QAAQ,EAAE,IAAI;AACrC,QAAI,MAAM,KAAK;AAEX,aAAO;AAAA,IACX;AACA,WAAO;AAAA,EACX;AAAA,EAEO,SAAS,KAAmG;AAC/G,QAAI,QAAQ,MAAM;AACd,aAAO;AAAA,IACX;AACA,QAAI,QAAQ,QAAW;AACnB,aAAO;AAAA,IACX;AACA,QAAI,MAAM,QAAQ,GAAG,GAAG;AACpB,aAAO;AAAA,IACX;AACA,QAAI,OAAO,QAAQ,UAAU;AACzB,aAAO;AAAA,IACX;AACA,QAAI,OAAO,QAAQ,WAAW;AAC1B,aAAO;AAAA,IACX;AACA,QAAI,OAAO,QAAQ,UAAU;AACzB,aAAO;AAAA,IACX;AACA,QAAI,OAAO,QAAQ,OAAO,QAAQ,UAAU;AACxC,aAAO;AAAA,IACX;AAAA,EACJ;AAAA,EAEO,aAAa,WAAuC,MAAY,oBAAI,KAAK,GAAY;AACxF,QAAI,aAAa,MAAM;AACnB,aAAO,IAAI,KAAK,UAAU,mBAAmB,GAAI,EAAE,QAAQ,IAAI,IAAI,QAAQ;AAAA,IAC/E;AACA,WAAO;AAAA,EACX;AAAA,EAEO,QAAQ,OAAuB;AAClC,YAAQ,SAAS,IAAI,QAAQ,KAAK,QAAQ,iBAAiB,GAAG;AAAA,EAClE;AAAA,EAEO,YAAY,OAAwB;AACvC,WAAO,OAAO,OAAO,2BAAW,EAAE,SAAS,KAAoB;AAAA,EACnE;AACJ;",
  "names": []
}
