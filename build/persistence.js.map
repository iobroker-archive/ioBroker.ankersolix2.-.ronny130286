{
  "version": 3,
  "sources": ["../src/persistence.ts"],
  "sourcesContent": ["import { promises as fs } from 'fs';\nimport { Logger } from './utils';\n\nexport interface Persistence<T> {\n    store(data: T): Promise<void>;\n    retrieve(): Promise<T | null>;\n}\n\nexport class FilePersistence<T> implements Persistence<T> {\n    constructor(\n        private readonly path: string,\n        log: Logger,\n    ) {\n        this.log = log;\n        this.path = path;\n    }\n\n    private log: Logger;\n\n    async store(data: T): Promise<void> {\n        this.log.info('Write Data to File: ' + this.path);\n        await fs.writeFile(this.path, JSON.stringify(data), 'utf8');\n    }\n\n    async retrieve(): Promise<T | null> {\n        try {\n            this.log.info('Try to restore data from File:' + this.path);\n            const data = await fs.readFile(this.path, 'utf8');\n            return JSON.parse(data) as T;\n        } catch (err) {\n            if ((err as any).code === 'ENOENT') {\n                return null;\n            } else {\n                throw err;\n            }\n        }\n    }\n}\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAA+B;AAQxB,MAAM,gBAA6C;AAAA,EACtD,YACqB,MACjB,KACF;AAFmB;AAGjB,SAAK,MAAM;AACX,SAAK,OAAO;AAAA,EAChB;AAAA,EAEQ;AAAA,EAER,MAAM,MAAM,MAAwB;AAChC,SAAK,IAAI,KAAK,yBAAyB,KAAK,IAAI;AAChD,UAAM,UAAAA,SAAG,UAAU,KAAK,MAAM,KAAK,UAAU,IAAI,GAAG,MAAM;AAAA,EAC9D;AAAA,EAEA,MAAM,WAA8B;AAChC,QAAI;AACA,WAAK,IAAI,KAAK,mCAAmC,KAAK,IAAI;AAC1D,YAAM,OAAO,MAAM,UAAAA,SAAG,SAAS,KAAK,MAAM,MAAM;AAChD,aAAO,KAAK,MAAM,IAAI;AAAA,IAC1B,SAAS,KAAK;AACV,UAAK,IAAY,SAAS,UAAU;AAChC,eAAO;AAAA,MACX,OAAO;AACH,cAAM;AAAA,MACV;AAAA,IACJ;AAAA,EACJ;AACJ;",
  "names": ["fs"]
}
